!!python/unicode 'components':
  !!python/unicode 'schemas':
    image-file: {description: Image created by processor., format: binary, type: string}
    job-id:
      description: Status and job ID of created job.
      properties:
        jobId: {description: ID of the created job., type: string}
        status: {$ref: '#/components/schemas/status'}
      type: object
    job-status:
      description: "Description of the status:\n  * `RUNNING` - Job is not finished\
        \ yet.\n  * `FINISHED` - Job was executed successfully.\n  * `ERROR` - Job\
        \ was cancelled due to an error.\n  * `STOPPED` - Job was stopped due to server\
        \ restrictions.\n"
      enum: [RUNNING, FINISHED, ERROR, STOPPED]
      type: string
    log-level:
      default: INFO
      description: Minimum Log level. One of (OFF, ERROR, WARN, INFO (default), DEBUG,
        TRACE). Actual mechanism for filtering log messages must not be implemented
        by processors.
      enum: [false, ERROR, WARN, INFO, DEBUG, TRACE]
      example: DEBUG
      type: string
    logging:
      additionalProperties: false
      description: JSON file holding the output of the job.
      properties:
        stderr:
          description: Output of error console.
          items: {$ref: '#/components/schemas/message-with-timestamp'}
          type: array
        stdout:
          description: Output of console.
          items: {$ref: '#/components/schemas/message-with-timestamp'}
          type: array
      type: object
    message-with-timestamp:
      properties:
        message: {description: message, type: string}
        timestamp: {description: timestamp, format: date, type: string}
      type: object
    mets-file: {description: 'XML holding all information of the digitized document.
        All references of the images and the PAGE XMLs are available via fileGrp section  (see
        http://www.loc.gov/standards/mets/mets.xsd)', type: string}
    page-file: {description: 'XML holding all information of the digitized page. (see
        http://schema.primaresearch.org/PAGE/gts/pagecontent/2017-07-15/pagecontent.xsd)',
      type: string}
    processors:
      description: Object holding all parameters needed by most processors.
      properties:
        group-id:
          description: All IDs of the image files which should be characterized.
          items: {type: string}
          type: array
        input-file-grp:
          description: ID(s) of the fileGrps which have to be used as input. (fileGrp@USE).
          items: {type: string}
          type: array
        log-level: {$ref: '#/components/schemas/log-level'}
        mets: {$ref: '#/components/schemas/mets-file'}
        output-file-grp:
          description: ID(s) of the fileGrps which have to be used as output. (fileGrp@USE).
          items: {type: string}
          type: array
        parameter:
          description: Parameter file in JSON format.
          items: {type: string}
          type: array
      required: [mets, input-file-grp, output-file-grp]
      type: object
    provenance-file: {description: JSON file holding all information about the provenance.,
      type: string}
    status:
      enum: [OK]
      type: string
    zip-file: {description: "zip-file containing all files created by the processor.\
        \  Content of zip-file: \n  * METS file (mandatory) (default: mets.xml)\n\
        \  * Provenance (mandatory) (default: provenance.json)\n  * PAGE XML (optional)\
        \ \n  * Images (optional) \n  * Output of (error) console. (optional) (default:\
        \ output.json)\n\nAll files have to be referenced inside the METS file.\n",
      format: binary, type: string}
!!python/unicode 'info':
  !!python/unicode 'contact': {!!python/unicode 'email': !!python/unicode 'volker.hartmann@kit.edu'}
  !!python/unicode 'description': !!python/unicode 'This is a generic definition of
    the modules used for the OCR-D project.

    * Implementation path for the different processors (description)

    * /preprocessing/characterization (Determine specific characteristics of a digitalization.)

    * /preprocessing/optimization (Execute all steps for image optimization at once.)

    * /preprocessing/optimization/cropping (Crops the digitization to printspace.)

    * /preprocessing/optimization/deskewing (Deskews the digitization.)

    * /preprocessing/optimization/despeckling (Despeckles the digitization.)

    * /preprocessing/optimization/dewarping (Dewarps the digitization.)

    * /preprocessing/optimization/binarization (Binarize the digitization.)

    *  /recognition/text-recognition (Estimate font families and languages used.)

    *  /recognition/font-identification (Estimate font families and languages used.)

    * /layout/segmentation (Detect and classify all regions of a page.)

    * /layout/segmentation/page (Detect all regions of a page.)

    * /layout/segmentation/line (Detect all text line regions inside the text regions
    of a page.)

    * /layout/segmentation/classification | Fine-grained classification of all detected
    regions of a page.)

    * /layout/analysis (Analyse regions on document level.)'
  !!python/unicode 'license': {!!python/unicode 'name': !!python/unicode 'Apache 2.0',
    !!python/unicode 'url': !!python/unicode 'http://www.apache.org/licenses/LICENSE-2.0.html'}
  !!python/unicode 'termsOfService': !!python/unicode 'http://swagger.io/terms/'
  !!python/unicode 'title': !!python/unicode 'OCR-D'
  !!python/unicode 'version': !!python/unicode '1.1.0'
!!python/unicode 'openapi': !!python/unicode '3.0.0'
!!python/unicode 'paths':
  !!python/unicode '/kraken-binarize':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id001 [!!python/unicode 'Image preprocessing']
    post:
      !!python/unicode 'description': !!python/unicode 'Binarize images with kraken'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Binarize images with kraken'
      !!python/unicode 'tags': *id001
  !!python/unicode '/kraken-binarize/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id001
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id001
  !!python/unicode '/kraken-ocr':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id002 [!!python/unicode 'Text recognition and optimization']
    post:
      !!python/unicode 'description': !!python/unicode 'OCR with kraken'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'OCR with kraken'
      !!python/unicode 'tags': *id002
  !!python/unicode '/kraken-ocr/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id002
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id002
  !!python/unicode '/kraken-segment':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id003 [!!python/unicode 'Layout analysis']
    post:
      !!python/unicode 'description': !!python/unicode 'Block segmentation with kraken'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Block segmentation with kraken'
      !!python/unicode 'tags': *id003
  !!python/unicode '/kraken-segment/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id003
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id003
  !!python/unicode '/tesserocr-recognize':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id004 [!!python/unicode 'Text recognition and optimization']
    post:
      !!python/unicode 'description': !!python/unicode 'Recognize text in lines with
        tesseract'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Recognize text in lines with tesseract'
      !!python/unicode 'tags': *id004
  !!python/unicode '/tesserocr-recognize/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id004
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id004
  !!python/unicode '/tesserocr-segment-line':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id005 [!!python/unicode 'Layout analysis']
    post:
      !!python/unicode 'description': !!python/unicode 'Segment page into regions
        with tesseract'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Segment page into regions with
        tesseract'
      !!python/unicode 'tags': *id005
  !!python/unicode '/tesserocr-segment-line/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id005
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id005
  !!python/unicode '/tesserocr-segment-region':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id006 [!!python/unicode 'Layout analysis']
    post:
      !!python/unicode 'description': !!python/unicode 'Segment regions into lines
        with tesseract'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Segment regions into lines with
        tesseract'
      !!python/unicode 'tags': *id006
  !!python/unicode '/tesserocr-segment-region/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id006
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id006
  !!python/unicode '/tesserocr-segment-word':
    get:
      !!python/unicode 'description': !!python/unicode 'Get ocrd-tool.json'
      !!python/unicode 'produces': []
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'application/json':
            !!python/unicode 'description': !!python/unicode 'Got ocrd-tool.json'
            !!python/unicode 'schema':
              !!python/unicode 'additionalProperties': false
              !!python/unicode 'description': !!python/unicode 'Schema for tools by
                OCR-D MP'
              !!python/unicode 'properties':
                !!python/unicode 'dockerhub': {!!python/unicode 'description': !!python/unicode 'DockerHub
                    image', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'git_url': {!!python/unicode 'description': !!python/unicode 'Github/Gitlab
                    URL', !!python/unicode 'format': !!python/unicode 'url', !!python/unicode 'type': !!python/unicode 'string'}
                !!python/unicode 'tools':
                  !!python/unicode 'additionalProperties': false
                  !!python/unicode 'patternProperties':
                    !!python/unicode 'ocrd-.*':
                      !!python/unicode 'additionalProperties': false
                      !!python/unicode 'properties':
                        !!python/unicode 'categories':
                          !!python/unicode 'description': !!python/unicode 'Tools
                            belong to this categories, representing modules within
                            the OCR-D project structure'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'Image preprocessing',
                              !!python/unicode 'Layout analysis', !!python/unicode 'Text
                                recognition and optimization', !!python/unicode 'Model
                                training', !!python/unicode 'Long-term preservation',
                              !!python/unicode 'Quality assurance']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                        !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                            description what the tool does'}
                        !!python/unicode 'executable': {!!python/unicode 'description': !!python/unicode 'The
                            name of the CLI executable in $PATH', !!python/unicode 'type': !!python/unicode 'string'}
                        !!python/unicode 'parameters':
                          !!python/unicode 'description': !!python/unicode 'Object
                            describing the parameters of a tool. Keys are parameter
                            names, values sub-schemas.'
                          !!python/unicode 'patternProperties':
                            !!python/unicode '.*':
                              !!python/unicode 'additionalProperties': false
                              !!python/unicode 'properties':
                                !!python/unicode 'default': {!!python/unicode 'description': !!python/unicode 'Default
                                    value when not provided by the user'}
                                !!python/unicode 'description': {!!python/unicode 'description': !!python/unicode 'Concise
                                    description of syntax and semantics of this parameter'}
                                !!python/unicode 'enum': {!!python/unicode 'description': !!python/unicode 'List
                                    the allowed values if a fixed list.', !!python/unicode 'type': !!python/unicode 'array'}
                                !!python/unicode 'format': {!!python/unicode 'description': !!python/unicode 'Subtype,
                                    such as `float` for type `number` or `uri` for
                                    type `string`.'}
                                !!python/unicode 'required': {!!python/unicode 'description': !!python/unicode 'Whether
                                    this parameter is required', !!python/unicode 'type': !!python/unicode 'boolean'}
                                !!python/unicode 'type':
                                  !!python/unicode 'description': !!python/unicode 'Data
                                    type of this parameter'
                                  !!python/unicode 'enum': [!!python/unicode 'string',
                                    !!python/unicode 'number', !!python/unicode 'boolean']
                                  !!python/unicode 'type': !!python/unicode 'string'
                              !!python/unicode 'required': [!!python/unicode 'description',
                                !!python/unicode 'type']
                              !!python/unicode 'type': !!python/unicode 'object'
                          !!python/unicode 'type': !!python/unicode 'object'
                        !!python/unicode 'steps':
                          !!python/unicode 'description': !!python/unicode 'This tool
                            can be used at these steps in the OCR-D functional model'
                          !!python/unicode 'items':
                            !!python/unicode 'enum': [!!python/unicode 'preprocessing/characterization',
                              !!python/unicode 'preprocessing/optimization', !!python/unicode 'preprocessing/optimization/cropping',
                              !!python/unicode 'preprocessing/optimization/deskewing',
                              !!python/unicode 'preprocessing/optimization/despeckling',
                              !!python/unicode 'preprocessing/optimization/dewarping',
                              !!python/unicode 'preprocessing/optimization/binarization',
                              !!python/unicode 'preprocessing/optimization/grayscale_normalization',
                              !!python/unicode 'recognition/text-recognition', !!python/unicode 'recognition/font-identification',
                              !!python/unicode 'layout/segmentation', !!python/unicode 'layout/segmentation/region',
                              !!python/unicode 'layout/segmentation/line', !!python/unicode 'layout/segmentation/word',
                              !!python/unicode 'layout/segmentation/classification',
                              !!python/unicode 'layout/analysis']
                            !!python/unicode 'type': !!python/unicode 'string'
                          !!python/unicode 'type': !!python/unicode 'array'
                      !!python/unicode 'required': [!!python/unicode 'description',
                        !!python/unicode 'steps', !!python/unicode 'executable', !!python/unicode 'categories']
                      !!python/unicode 'type': !!python/unicode 'object'
                  !!python/unicode 'type': !!python/unicode 'object'
                !!python/unicode 'version': {!!python/unicode 'description': !!python/unicode 'Version
                    of the tool, expressed as MAJOR.MINOR.PATCH.', !!python/unicode 'pattern': !!python/unicode '^[0-9]+\.[0-9]+\.[0-9]+$',
                  !!python/unicode 'type': !!python/unicode 'string'}
              !!python/unicode 'required': [!!python/unicode 'version', !!python/unicode 'git_url',
                !!python/unicode 'tools']
              !!python/unicode 'type': !!python/unicode 'object'
      tags: &id007 [!!python/unicode 'Layout analysis']
    post:
      !!python/unicode 'description': !!python/unicode 'Segment lines into words with
        tesseract'
      !!python/unicode 'operationId': !!python/unicode 'start-processor'
      !!python/unicode 'requestBody':
        !!python/unicode 'content':
          !!python/unicode 'multipart/form-data':
            !!python/unicode 'schema':
              !!python/unicode 'description': !!python/unicode 'Object holding all
                parameters needed by most processors.'
              parameters:
                properties: {}
                type: object
              !!python/unicode 'properties':
                !!python/unicode 'group-id':
                  !!python/unicode 'description': !!python/unicode 'All IDs of the
                    image files which should be characterized.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'input-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as input. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'log-level': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/log-level'}
                !!python/unicode 'mets': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
                !!python/unicode 'output-file-grp':
                  !!python/unicode 'description': !!python/unicode 'ID(s) of the fileGrps
                    which have to be used as output. (fileGrp@USE).'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
                !!python/unicode 'parameter':
                  !!python/unicode 'description': !!python/unicode 'Parameter file
                    in JSON format.'
                  !!python/unicode 'items': {!!python/unicode 'type': !!python/unicode 'string'}
                  !!python/unicode 'type': !!python/unicode 'array'
              !!python/unicode 'required': [!!python/unicode 'mets', !!python/unicode 'input-file-grp',
                !!python/unicode 'output-file-grp']
              !!python/unicode 'type': !!python/unicode 'object'
      !!python/unicode 'responses':
        !!python/unicode '201':
          !!python/unicode 'content':
            !!python/unicode 'application/json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-id'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            The created file(s) has/have to be referenced inside the given fileGrp
            sections.'
          !!python/unicode 'headers':
            !!python/unicode 'Location':
              !!python/unicode 'description': !!python/unicode 'URL of the generated
                job.'
              !!python/unicode 'schema': {!!python/unicode 'format': !!python/unicode 'url',
                !!python/unicode 'type': !!python/unicode 'string'}
          !!python/unicode 'links':
            !!python/unicode 'GetFilesByJobId':
              !!python/unicode 'description': !!python/unicode 'The `jobId` value
                returned in the response can be used as the `jobID` parameter in `GET
                /ocrd/processor/jobid/{jobID}`.

                '
              !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
              !!python/unicode 'parameters': {!!python/unicode 'jobID': !!python/unicode '$response.body#/jobID'}
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Invalid
            input'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Segment lines into words with
        tesseract'
      !!python/unicode 'tags': *id007
  !!python/unicode '/tesserocr-segment-word/{_id}':
    delete:
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '204':
          !!python/unicode 'content':
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.
            All linked resources are removed successfully.'
        !!python/unicode '404': {!!python/unicode 'description': !!python/unicode 'Not
            found.'}
        !!python/unicode '410': {!!python/unicode 'description': !!python/unicode 'Resource
            is not available anymore.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Delete all files created by job
        with ID ''jobID''.'
      !!python/unicode 'tags': *id007
    get:
      !!python/unicode 'description': !!python/unicode 'Fetch all file created by
        job with id ''jobID''. If more than one file is created per mimetype use mimetype
        ''application/zip'' as accept header to fetch all files at once.'
      !!python/unicode 'operationId': !!python/unicode 'get-created-files-of-processor'
      !!python/unicode 'parameters':
      - !!python/unicode 'description': !!python/unicode 'job ID of the started process.'
        !!python/unicode 'in': !!python/unicode 'path'
        !!python/unicode 'name': !!python/unicode 'jobID'
        !!python/unicode 'required': true
        !!python/unicode 'schema': {!!python/unicode 'type': !!python/unicode 'string'}
      !!python/unicode 'responses':
        !!python/unicode '200':
          !!python/unicode 'content':
            !!python/unicode 'application/mets+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/mets-file'}
            !!python/unicode 'application/vnd.ocrd+job-status':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/job-status'}
            !!python/unicode 'application/vnd.ocrd.log+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/logging'}
            !!python/unicode 'application/vnd.ocrd.page+xml':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/page-file'}
            !!python/unicode 'application/vnd.ocrd.prov+json':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/provenance-file'}
            !!python/unicode 'application/zip':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/zip-file'}
            !!python/unicode 'image/*':
              !!python/unicode 'schema': {!!python/unicode '$ref': !!python/unicode '#/components/schemas/image-file'}
          !!python/unicode 'description': !!python/unicode 'Successful Operation.'
        !!python/unicode '400': {!!python/unicode 'description': !!python/unicode 'Bad
            request. Maybe more than one file of at least one mimetype was created.
            Please use mimetype ''application/zip'' as accept header to fetch all
            files at once.'}
        !!python/unicode '500': {!!python/unicode 'description': !!python/unicode 'Internal
            error'}
      !!python/unicode 'summary': !!python/unicode 'Get created files.'
      !!python/unicode 'tags': *id007
!!python/unicode 'servers':
- {!!python/unicode 'url': !!python/unicode 'http://test.ocr-d.de/v1'}
!!python/unicode 'tags':
- {!!python/unicode 'description': !!python/unicode 'Methods that characterize and
    optimize the digital representations for layout and text recognition.', !!python/unicode 'name': !!python/unicode 'Image
    preprocessing'}
- {!!python/unicode 'description': !!python/unicode 'Registration of the correct text
    flow, that means the reproduction of the logical-structural text flow and high
    text accuracy.', !!python/unicode 'name': !!python/unicode 'Layout analysis'}
- {!!python/unicode 'description': !!python/unicode 'Combination of several OCR engines
    with subsequent corrections to improve text results.', !!python/unicode 'name': !!python/unicode 'Text
    recognition and optimization'}
- {!!python/unicode 'description': !!python/unicode 'Training and provision of models.',
  !!python/unicode 'name': !!python/unicode 'Model training'}
- {!!python/unicode 'description': !!python/unicode 'Ensuring the long-term availability
    and referenceability of the texts obtained.', !!python/unicode 'name': !!python/unicode 'Long-term
    preservation'}
- {!!python/unicode 'description': !!python/unicode 'Determination/estimation of the
    potential of each component.', !!python/unicode 'name': !!python/unicode 'Quality
    assurance'}

